Final Tasks
-----------
  - /assets/img/input/...
  - /assets/img/button/...
  - rename + move validate.ts ... ?
  - Class/Interface/Service/Component representing ...
  - private functions ... !
  - Bonus: Alias ... ?
  - documentate fn: return value ...

// NameInputComponent
// ------------------
// mixins.scss + inputs.scss
// onValueChange()
// is import of mixins still necessary???
// global mixins
// global img-32
// global input (move)
// folder input/buttons

// EmailInputComponent
// -------------------
// this.type ...
// check type="email" ...
// validateName() + validateEmail() ...
// TextInputComponent ... ?!
// double html and scss ...
// h-70 and h-48 necessary ... ?

Final Check
-----------
  - LoginComponent (html, scss, ts) ... (0/3)


Components (1/?)
----------
  - inputs (2/?)
    ------
      - EmailInputComponent - check* * reactive TextInputComponent? *componente representing ...
      - NameInputComponent - check* * reactive TextInputComponent? *componente representing ...


Interfaces (0/?)
----------
  - 

Models (1/?)
------
  - InputValidator - check
  - ReactiveInput ... *class representing ...


Services
      

ts (1/?)
--
  - validate.ts - check



     <form [formGroup]="signUpForm" (submit)="logName()">
            <app-name-input [control]="signUpForm.get('name')"></app-name-input>
            <app-email-input [control]="signUpForm.get('email')"></app-email-input>
            <app-password-input [control]="signUpForm.get('password')"></app-password-input>
            <button>Submit</button>
        </form>